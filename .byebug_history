continue
@schedules = Schedule.all
params
continue
@schedule[:start_time] < @schedule[:end_time]
@schedule[:start_time] > @schedule[:end_time]
  @schedule = current_user.schedules.new(schedule_params)
continue
@schedule[:start_time] = 10:00
:start_time = 10:00
start_time = 10:00
  @schedule = current_user.schedules.new(schedule_params)
continue
 @schedule[:start_time] > @schedule[:end_time]
if @schedule[:start_time] > @schedule[:end_time]
if @schedule[:start_time]>@schedule[:end_time]
     @schedule[:start_time]
     @schedule = current_user.schedules.new(schedule_params)
schedule
@schedule
  check[:start_time] > check[:end_time]
  check[:start_time] > time[:end_time]
if  check[:start_time] > time[:end_time] then
if  check[:start_time] > time[:end_time]
  check[:start_time] > time[:end_time]
  check[:start_time] > time[;end_time]
  check[:start_time] > time[end_time]
if  check[:start_time] > time[end_time] then
if  check[:start_time] > time[end_time]
time[:end_time]
time[end_time]
time = schedule_params
end = schedule_params
check[:start_time]
check= schedule_params
:start_time
start_time
schedule_params.start_time
schedule_params.people
schedule_params
params[:peopele] =>4
params[:peopele]
Schedule.start_time
Schedule
params[:start_time]
params
 @user.update(user_params)
 @user = current_user
 @user.update(user_params)
exit
 @user.update(user_params)
a.errors
 a=@user.update(user_params)
 @user.update(user_params)
@user.update
@user
user_params
  @user = current_user
continue
people_check
Schedule.all.people_check
Schedule.all
continue
@room
@room = "Web Room."
V
@room
V
self.people <= 2 
room
@room
people
self.people
@room
continue
room
  room = "Web Room."
self.people <= 2
self.people
if self.people <= 2
continue
@room
@room = "Web Room."
self.people <= 2 
continue
   25:         end
   24:         @Room = "PlugIn Room."
   23:         else
   22:            @Room = "Web Room."
 if self.people <= 2
@Room
self.people <= 2
continue
if self.people <= 2
people <= 4
people <= 2
:end_time > :start_time 
:end_time < :start_time 
 if :end_time < :start_time 
exit
@user.update(user_params)
user_params
 @user = current_user
@user.update(user_params)
@user.update(user_params
user_params
continue
DDDD
@user.update(user_params)
@user.update
user_params
  @user = current_user
continue
 @user.update(user_params)
user_params
@user = current_user
@user.update(user_params)
user_params
 @user = current_user
continue
  User.find_by(id: session[:user_id]) 
continue
params['people']
params['purpose']
params
exit
end_time > start_time
end_time < start_time
if end_time < start_time
continue
Schedule.exists?(:start_time => :start_time).present?
schedule.exists?(:start_time => :start_time).present?
Schedule.exists?(:start_time => :start_time).present?
@start_time
@start_time.exit?
@start_time.exists?
start_time.exists?
@start_time
 @start_time = start_time
@start_time
exit
@s == start_time
@s= Schedule.order(start_time: :asc).last
@s == start_time
@s = start_time
@s= Schedule.order(start_time: :asc).last
 Schedule.order(start_time: :asc).last
params[:start_time]
Schedule.where("start_time = #{params[:start_time]}")
@time == @start_time
@time == start_time
@time.each == start_time
if t.start_time == start_time
 if @time.each do |t| 
end
   23:    end
   22:    errors.add(:start_time, 'Time alredy taken')
   21:    if t.start_time == start_time
 if @time.each do |t| 
@time = Schedule.select(:start_time)
 @time.each == start_time
start_time
@time.each
 @time.each == start_time
@time.includes? start_time
@time.includes? 
@time.includes
@time.inculdes
@time.inculde
start_time
  if @time.include? start_time then
  if time.include? start_time
  if @time.include? start_time
@time = Schedule.select(:start_time)
exit
@time == @schedule
@schedule
Schedule.select(:start_time, :end_time)
continue
exit
@time.time  == @schedule.time
@time == @schedule.time
@time == @schedule
@time
params
@schedule = current_user.schedules.new(schedule_params)
 @time= Schedule.select(:start_time, :end_time)
      @schedule = current_user.schedules.new(schedule_params)
 @time= Schedule.select(:start_time, :end_time)
      @schedule = current_user.schedules.new(schedule_params)
 @time= Schedule.select(:start_time, :end_time)
params
@schedule = current_user.schedules.new(schedule_params)
@time= Schedule.select(:start_time, :end_time)
